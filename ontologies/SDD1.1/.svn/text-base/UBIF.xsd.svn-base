<?xml version="1.0" encoding="iso-8859-1"?>
<xs:schema xmlns="http://rs.tdwg.org/UBIF/2006/" xmlns:u="http://rs.tdwg.org/UBIF/2006/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:html="http://www.w3.org/1999/xhtml" targetNamespace="http://rs.tdwg.org/UBIF/2006/" elementFormDefault="qualified" attributeFormDefault="unqualified" blockDefault="#all" version="Unified Biosciences Information Framework (UBIF) 1.1 and SDD 1.1 rev. 4">
  <xs:annotation>
    <xs:documentation xml:lang="en-us">Top-level schema to be referenced in instance documents for validation; simplified alternative to SDD110.xsd!</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation xml:lang="en-us">This version contains only UBIF (SDD elements are supported, but not validated). To add further object types, this file has to be changed.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation xml:lang="en-us">How this was created: SDD110.xsd copied, all SDD elements changed to VersionExtension type, all identity constraints removed.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation xml:lang="en-us">Copyright © 2006 TDWG (Taxonomic Databases Working Group, www.tdwg.org). See the file SDD_(c).xsd for authorship and licensing information.</xs:documentation>
  </xs:annotation>
  <xs:include schemaLocation="UBIF_CoreExtensions.xsd"/>
  <xs:element name="Datasets">
    <xs:annotation>
      <xs:documentation xml:lang="en-us">Root element for files or data streams. Multiple Dataset objects are completely independent. Potential relationship may be detected by the consumer, but are not expressed in the UBIF format. The sequence of Dataset objects has no semantics and does not have to be preserved.

The version of the UBIF standard used is defined in the namespace declaration and needs no separate data element.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="TechnicalMetadata" type="TechnicalMetadata">
          <xs:annotation>
            <xs:documentation xml:lang="en-us">Metadata describing provider and process that created the current xml document. The provider is not necessarily the creator or owner of the dataset, compare Owner, IPR of dataset itself.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Dataset" type="Dataset" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation xml:lang="en-us">Data from one or several object types, with common technical and content metadata.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:group ref="SpecificExtension" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="Dataset">
    <xs:annotation>
      <xs:documentation xml:lang="en-us">Dataset itself is derived from Abstract object, as are the base types for which it contains collections.

The first elements (Repres., Links, RevisionData, Owner, IPRStatem.) are content metadata for the entire data set / data collection. If, e.g. in response to queries, data subsets are extractet from a larger base data set, these metadata are not required to be specific to each document, but may may describe the base set itself. Link uri should then refer to the base set using rel=BasedUpon, and the dataset-uri may contain a query URI (or be omitted).

If a history of the data collection
(revised or expanded in various
projects or at different institutions, aggregated from multiple sources)
is available, this may be reflected in the IPR statements and possibly in
the list of Owners.

Note: if a data set is an extract from a larger base set, it is recommended to use 'Link rel = BasedOn' to point to the complete data set. Note that this may enable indexing robots to index the entire base data set.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OwnedAbstractObject">
        <xs:sequence>
          <xs:element name="Scope" type="ExtendedScopeSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">The scope of the dataset

NOTE: This is the last metadata element of the dataset itself. The following elements contain object collections ('payload'):</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TaxonNames" type="TaxonNameSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Taxon names used in the data set. Each object contains a name - either locally defined or representing an external resource defined in a linking mechanism and defines a local id attribute that may be referred to multiple times from within the data set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TaxonHierarchies" type="TaxonHierarchySet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Optional hierarchy (= tree, biology: taxonomy) of taxon classes defined above. A hierarchy may be incomplete, i. e. some TaxonName object may not be in the hierarchy. TaxonHierarchies may be locally defined or represent an external source.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Specimens" type="SpecimenSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Specimens (including ABCD.Units) are physical objects that have been collected or observed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TaxonOccurrences" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">(Extension point for future core ontology objects. This should include observations and organism interactions)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TaxonIdentifications" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">(Extension point for future core ontology objects)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Geolocalisations" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">(Extension point for future core ontology objects. An occurrence may 
have multiple geolocalisations, especially later coordinate or grid estimates, adjustments for geo. area name changes etc. This is analogous to taxon identifications.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DescriptiveConcepts" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Descriptive concepts (properties, object parts, observation methods, etc.) define an optional ontology for descriptions. In contrast to characters, concepts can not be scored in descriptions. - Reusable states and char. dependencies are expressed here as well. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Characters" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Depending on their type, characters define categorical states, quantitative measures, free-form text, etc. 
Characters are realized (or operationalized) concepts that are used in descriptions. In software, characters define variables that hold data in taxon descriptions. Example: 'leg' may be a concept, 'leg number (as integer number)' a character, '6' the character data in a description.
Characters are defined in an unordered flat list. These may be ordered or structured through CharacterTrees defined below.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CharacterTrees" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Character trees arrange concepts and characters. They may also be used to define flat char. subsets for filtering purposes.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NaturalLanguageDescriptions" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Authored or auto-generated free-form descriptions, which may be completely or partially marked-up with elements similar to those in coded descriptions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CodedDescriptions" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Largely language-independent descriptions controlled by Terminology. Both coded and nat. lang. may describe either abstract classes (taxa, diseases, etc.) or physical objects (individual specimens).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="IdentificationKeys" type="VersionExtension" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Dichotomous or multifurcating
authored keys (incl. legacy data)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Agents" type="AgentSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Documentation of persons/organizations involved in the authoring, compiling, editing, etc. of the data set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Publications" type="PublicationSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Publications used in the data set, defined through objects (= local or external link, see under Agents).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="GeographicAreas" type="GeographicAreaSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Named geographical areas (continents, countries, cities, national parks, locally described places, etc.). An example of an external gazetteer referred to is the TDWG Geography standard.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MediaObjects" type="MediaObjectSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">Resource definitions containing links like URLs or actually embedding the resource (e. g. encoded images).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Audiences" type="AudienceSet" minOccurs="0">
            <xs:annotation>
              <xs:documentation xml:lang="en-us">An Audience is an extension of language (including dialect), with expertise (pupil, beginner, expert) and other parameters (policy makers, farmers, etc.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:group ref="SpecificExtension" minOccurs="0"/>
        </xs:sequence>
        <xs:attributeGroup ref="language">
          <xs:annotation>
            <xs:documentation xml:lang="en-us">The language on dataset is required; if no language is known this should be explicitly stated (lang="und"). This value is inherited in all places where an xml:lang attribute is specified in the UBIF schema (on Label, Detail, etc.) if no other value is given there (i.e. this value must be interpreted as a dataset-wide default).</xs:documentation>
          </xs:annotation>
        </xs:attributeGroup>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>
